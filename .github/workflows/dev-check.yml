name: Dev Branch Migration Check

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  migration-check:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgis/postgis:15-3.3
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: dangma_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache apt packages
        uses: actions/cache@v3
        id: apt-cache
        with:
          path: /var/cache/apt/archives
          key: ${{ runner.os }}-apt-gdal-${{ hashFiles('.github/workflows/dev-check.yml') }}
      
      - name: Install GDAL and spatial dependencies
        if: steps.apt-cache.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y gdal-bin libgdal-dev python3-gdal binutils libproj-dev libgeos-dev

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create false

      - name: Install dependencies
        run: |
          cd django
          poetry install

      - name: Remove existing migrations
        run: |
          cd django
          rm -f */migrations/0*.py

      - name: Check migrations
        run: |
          cd django
          
          # 로컬 PostgreSQL 연결 확인
          PGPASSWORD=postgres psql -h localhost -U postgres -d dangma_test -c "SELECT 1" || echo "PostgreSQL 연결 실패"
          
          # 명시적 환경 변수 설정 (로컬 테스트 DB 전용)
          export DEV_AWS_RDS_NAME=dangma_test
          export DEV_AWS_RDS_USER=postgres
          export DEV_AWS_RDS_PASSWORD=postgres
          export DEV_AWS_RDS_HOST=localhost
          export DEV_AWS_RDS_PORT=5432
          
          # 마이그레이션 실행
          poetry run python manage.py makemigrations --settings=a_core.settings.dev-aws
          poetry run python manage.py migrate --settings=a_core.settings.dev-aws
        env:
          # 테스트용 더미 값 추가 (필요시)
          AWS_S3_ACCESS_KEY_ID: dummy-key
          AWS_S3_SECRET_ACCESS_KEY: dummy-secret
          AWS_S3_STORAGE_BUCKET_NAME: dummy-bucket

      - name: Check runserver
        run: |
          cd django
          timeout 5s poetry run python manage.py runserver --settings=a_core.settings.dev-aws || code=$?; if [ $code -eq 124 ]; then exit 0; else exit $code; fi
