services:
  web:
    build:
      context: .
      dockerfile: django/Dockerfile
    restart: on-failure:5  # 무한 재시작 방지
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             daphne -b 0.0.0.0 -p 8000 a_core.asgi:application"
    ports:
      - "8000:8000"
    volumes:
      - ./django/:/app/
      - static_volume:/app/static
      - media_volume:/app/media
      # 캐시 관련 볼륨 제거 - 메모리 절약
    env_file:
      - ./django/.env
    environment:
      - DJANGO_SETTINGS_MODULE=a_core.settings.product
      - PYTHONDONTWRITEBYTECODE=1
      # 메모리 최적화 환경변수 추가
      - PYTHONUNBUFFERED=1
      - PYTHONOPTIMIZE=1
    networks:
      - backend-network
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          cpus: '0.35'  # CPU 제한 감소 
          memory: 300M  # 메모리 제한 감소
        reservations:
          cpus: '0.15'  # 예약 자원 감소
          memory: 128M  # 최소 필요 메모리
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 60s  # 간격 늘림
      timeout: 10s
      retries: 3
      start_period: 60s  # 시작 대기 시간 늘림
    logging:
      driver: "json-file"
      options:
        max-size: "5m"  # 로그 크기 감소
        max-file: "1"   # 백업 파일 감소

  nginx:
    image: nginx:1.21-alpine
    restart: on-failure:5  # 무한 재시작 방지
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - web
    deploy:
      resources:
        limits:
          memory: 128M  # Nginx 메모리 제한
    networks:
      - backend-network
    logging:
      driver: "json-file"
      options:
        max-size: "5m"  # 로그 크기 감소
        max-file: "1"   # 백업 파일 감소

  redis:
    image: redis:alpine
    restart: always  # 항상 재시작되도록 설정
    command: redis-server  # 가장 기본적인 명령어
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "1"

volumes:
  static_volume:
  media_volume:

networks:
  backend-network:
    driver: bridge
